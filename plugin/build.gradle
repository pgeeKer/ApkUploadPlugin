plugins {
    id 'java-library'
    id 'kotlin'
    id 'groovy'
    id 'maven-publish'
    id "com.gradle.plugin-publish" version "0.12.0"
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_7
    targetCompatibility = JavaVersion.VERSION_1_7
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    compileOnly gradleApi()
    compileOnly localGroovy()
    compileOnly 'com.android.tools.build:gradle:4.1.2'

    implementation "com.google.code.gson:gson:2.9.0"
    implementation "com.squareup.okhttp3:okhttp:3.12.12"
}

////================ 发布本地配置 start =====================
//publishing {
//    publications {
//        maven(MavenPublication) {
//            groupId = 'com.apk.upload.plugin'
//            artifactId = 'apkUploadPlugin'
//            version = '1.0.0'
//
//            from components.java
//        }
//    }
//
//    repositories {
//        maven {
//            url = "../repo"
//        }
//    }
//}
////================ 发布本地配置 end =====================

tasks.withType(Javadoc) {
    failOnError false
    options.addStringOption('Xdoclint:none', '-quiet')
    options.addStringOption('encoding', 'UTF-8')
    options.addStringOption('charSet', 'UTF-8')
}

version = "1.0.0"    //配置插件的版本号
group = "com.apk.upload.plugin"  //插件的群组，插件的classpath会用到
pluginBundle {
    website = 'http://www.gradle.org/'
    vcsUrl = 'https://github.com/gradle/gradle'
    description = '我们有这样的场景，在项目开发测试阶段，经常会将apk打包后，上传到蒲公英等三方平台，然后再发给公司其他人员进行测试、体验。每次发包的时候要去进行上传、上传完后通知相关人员，导致有点繁琐，浪费时间。此插件为了解决这个问题。\n' +
            '\n' +
            'Gradle插件，依赖进项目工程，编译APK，使用Task命令一键上传apk到三方平台，如：蒲公英。（目前暂时只支持蒲公英，可以进行扩展）。 上传成功后，如果你需要提醒其他人员进行版本更新，如：钉钉群、飞书群、企业微信群等（还可扩展其他），配置相关参数，自动发送更新消息到群里。'  //插件描述
    tags = ['upload', 'apkUploadPlugin', 'apk', 'apk plugin']  //插件的tag。可以通过这个在插件门户上搜索

    plugins {
        greetingsPlugin {
            id = 'com.apk.upload.plugin'   //插件的id，到时候apply的插件id
            displayName = 'apkUploadPlugin'
        }
    }
}